import cv2
import glob
import csv
from PIL import Image
from tqdm import tqdm

def process_image_pair(path1, path2):
    img1 = cv2.imread(path1)
    img2 = cv2.imread(path2)
    img11 = Image.open(path1).convert('RGB')
    img22 = Image.open(path2).convert('RGB')

    sift = cv2.SIFT_create()
    keypoints_1, descriptors_1 = sift.detectAndCompute(img1, None)
    keypoints_2, descriptors_2 = sift.detectAndCompute(img2, None)

    bf = cv2.BFMatcher(cv2.NORM_L1, crossCheck=True)
    matches = bf.match(descriptors_1, descriptors_2)
    matches = sorted(matches, key=lambda x: x.distance)

    results = []
    if len(matches) >= 10:
        for i in range(10):
            m = matches[i]
            kp1 = keypoints_1[m.queryIdx]
            kp2 = keypoints_2[m.trainIdx]
            results.append((
                m.distance,
                kp1.pt,
                kp2.pt,
                img11.getpixel(kp1.pt),
                img22.getpixel(kp2.pt),
                f'p_{path1.split("/")[-1]}',
                f'p_{path2.split("/")[-1]}'
            ))
    return results

def main():
    jpg_files = sorted(glob.glob("D:/dataset/train/p/*.jpg"))
    print(f"Total images: {len(jpg_files)}")

    with open("Targetpath:/feature_sift.csv", "w", newline='', encoding='utf-8') as csvfile:
        csv_writer = csv.writer(csvfile)
        csv_writer.writerow(['distance', 'pic_1', 'pic_2', 'point_1', 'point_2', 'filename_1', 'filename_2'])

        for i in tqdm(range(len(jpg_files) - 1), desc="Processing image pairs"):
            path1, path2 = jpg_files[i], jpg_files[i+1]
            results = process_image_pair(path1, path2)
            csv_writer.writerows(results)

if __name__ == "__main__":
    main()